
substitutions:
  deviceName: steppermotor
  upperDeviceName: Stepper Motor
  updateInterval: 600s

esphome:
  name: ${deviceName}
  platform: ESP32
  board: nodemcu-32s


packages:
  captive_portal: !include common/captive_portal.yaml
  wifi: !include common/wifi.yaml
  mqtt: !include common/mqtt.yaml
  logger: !include common/logger.yaml
  #api: !include common/api.yaml
  ota: !include common/ota.yaml
  web_server: !include common/web_server.yaml

sensor:
  - <<: !include common/sensor/uptime.config.yaml
  - <<: !include common/sensor/wifi_signal.config.yaml

#number:
#  - platform: template
#    name: Stepper Control
#    min_value: -100
#    max_value: 100
#    step: 1
#    set_action:
#      then:
#        - stepper.set_target:
#            id: ${deviceName}
#            target: !lambda 'return x;'
#
## Example configuration entry
#stepper:
#  - platform: a4988
#    id: ${deviceName}
#    step_pin: GPIO4
#    dir_pin: GPIO2
#    max_speed: 5 steps/s
#
#    # Optional:
#    acceleration: inf
#    deceleration: 200



globals:
  - id: is_locked
    type: bool
    restore_value: yes
    initial_value: 'true'

switch:
  - platform: template
    name: "Lock Switch"
    id: lock_switch
    lambda: "return id(is_locked);"
    turn_on_action:
      - stepper.set_target:
          id: my_stepper
          target: 2300
      - globals.set:
          id: is_locked
          value: 'true'
    turn_off_action:
      - stepper.set_target:
          id: my_stepper
          target: -500
      - wait_until: # Wait until endstop reached
          lambda: 'return (id(my_stepper).current_position == id(my_stepper).target_position);'
      - globals.set:
          id: is_locked
          value: 'false'
      - delay: 2s # Leave latch open
      - stepper.report_position:
          id: my_stepper
          position: -370
      - stepper.set_target:
          id: my_stepper
          target: 0

stepper:
  - platform: a4988
    id: my_stepper
    step_pin: GPIO18
    dir_pin: GPIO05
    max_speed: 500 steps/s
    sleep_pin: GPIO19
